
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Rafael LS
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private DefaultListModel Debug = new DefaultListModel();
    private Mecanismos tipos = new Mecanismos();
    private MensagemRMI mensagem;
    
    public TelaPrincipal() {

        initComponents();
        this.setLocationRelativeTo(null);
        jLDebug.setModel(Debug);
        jLDebug.setAutoscrolls(true);
                
        tipos.setTela(this);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBMecanismos = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jBtnConectar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTFIP = new javax.swing.JTextField();
        jTFPorta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLDebug = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCBMecanismos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SocketUDP", "SocketTCP", "RPC", "RMI", "Multicast" }));
        jCBMecanismos.setSelectedIndex(-1);
        jCBMecanismos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBMecanismosItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("TESTADOR DE SISTEMAS DISTRIBUIDOS");

        jBtnConectar.setText("Conectar");
        jBtnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConectarActionPerformed(evt);
            }
        });

        jLabel2.setText("Escolha o Mecanismo:");

        jTFIP.setText("localhost");

        jTFPorta.setEditable(false);
        jTFPorta.setText("1234");
        jTFPorta.setEnabled(false);

        jLabel3.setText("IP:");

        jLabel4.setText("Porta:");

        jLDebug.setBackground(new java.awt.Color(0, 0, 0));
        jLDebug.setForeground(new java.awt.Color(0, 153, 0));
        jScrollPane1.setViewportView(jLDebug);

        jLabel5.setText("Tela de Debug:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jCBMecanismos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(25, 25, 25)
                                    .addComponent(jTFIP, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTFPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(42, 42, 42)
                                    .addComponent(jBtnConectar)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBMecanismos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnConectar)
                        .addComponent(jTFPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jCBMecanismos.getAccessibleContext().setAccessibleName("");
        jBtnConectar.getAccessibleContext().setAccessibleName("jBtnConectar");

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    public void MostraTela(String metodos) {
        String[] aux = metodos.split(",");
        //Adiciona um novo elemento na lista
        Debug.addElement(aux[0] + " : " + aux[1] + " NanoSegundos");

        //Atualiza o scroll para a última posição da lista
        jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
        repaint();
    }

    private void jBtnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConectarActionPerformed
        //SocketUDP, SocketTCP, RPC, RMI, Multicast
        if (jCBMecanismos.getSelectedItem().equals("SocketUDP")) {
            int teste = tipos.testeUDP(Integer.parseInt(jTFPorta.getText()));
            if (teste == 1) {
                //Adiciona um novo elemento na lista
                Debug.addElement("Inicializado Socket UDP...");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            } else {
                Debug.addElement("Porta já em uso Socket UDP!");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            }
        } else if (jCBMecanismos.getSelectedItem().equals("SocketTCP")) {
            int teste = tipos.testeTCP(Integer.parseInt(jTFPorta.getText()));
            if (teste == 1) {
                //Adiciona um novo elemento na lista
                Debug.addElement("Inicializado Socket TCP...");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            } else {
                Debug.addElement("Porta já em uso Socket TCP!");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            }

        } else if (jCBMecanismos.getSelectedItem().equals("RPC")) {
                
        } else if (jCBMecanismos.getSelectedItem().equals("RMI")) {
            int teste = tipos.testeRMI();
            if (teste == 1) {
                //Adiciona um novo elemento na lista
                Debug.addElement("Inicializado Socket RMI...");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            } else {
                Debug.addElement("Erro ao criar Socket RMI!");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            }

        } else if (jCBMecanismos.getSelectedItem().equals("Multicast")) {
            int teste = tipos.testeMulticast();
            if (teste == 1) {
                //Adiciona um novo elemento na lista
                Debug.addElement("Inicializado Multicast...");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            } else {
                Debug.addElement("Erro ao criar Multicast!");

                //Atualiza o scroll para a última posição da lista
                jLDebug.ensureIndexIsVisible(Debug.getSize() - 1);
            }
        }
    }//GEN-LAST:event_jBtnConectarActionPerformed

    private void jCBMecanismosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBMecanismosItemStateChanged
        if (jCBMecanismos.getSelectedItem().equals("SocketUDP")) {
            jTFPorta.setText("1234");
        } else if (jCBMecanismos.getSelectedItem().equals("SocketTCP")) {
            jTFPorta.setText("1235");
        } else if (jCBMecanismos.getSelectedItem().equals("RPC")) {
            jTFPorta.setText("1236");
        } else if (jCBMecanismos.getSelectedItem().equals("RMI")) {
            jTFPorta.setText("----");
        } else if (jCBMecanismos.getSelectedItem().equals("Multicast")) {
            jTFPorta.setText("3456");
        }
    }//GEN-LAST:event_jCBMecanismosItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnConectar;
    private javax.swing.JComboBox jCBMecanismos;
    private javax.swing.JList jLDebug;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFIP;
    private javax.swing.JTextField jTFPorta;
    // End of variables declaration//GEN-END:variables

}
